# This file configures the analyzer, which statically analyzes Dart code to
# check for errors, warnings, and lints.
#
# The issues identified by the analyzer are surfaced in the UI of Dart-enabled
# IDEs (https://dart.dev/tools#ides-and-editors). The analyzer can also be
# invoked from the command line by running `flutter analyze`.

# The following line activates a set of recommended lints for Flutter apps,
# packages, and plugins designed to encourage good coding practices.
include: package:flutter_lints/flutter.yaml

#linter:
# The lint rules applied to this project can be customized in the
# section below to disable rules from the `package:flutter_lints/flutter.yaml`
# included above or to enable additional rules. A list of all available lints
# and their documentation is published at
# https://dart-lang.github.io/linter/lints/index.html.
#
# Instead of disabling a lint rule for the entire project in the
# section below, it can also be suppressed for a single line of code
# or a specific dart file by using the `// ignore: name_of_lint` and
# `// ignore_for_file: name_of_lint` syntax on the line or in the file
# producing the lint.
#  rules:
# avoid_print: false  # Uncomment to disable the `avoid_print` rule
# prefer_single_quotes: true  # Uncomment to enable the `prefer_single_quotes` rule

# Additional information about this file can be found at
# https://dart.dev/guides/language/analysis-options

analyzer:
  exclude:
    - build/**
    - lib/**.chopper.dart
    - lib/**.g.dart
    - "**/*.g.dart"
    - "**/*.freezed.dart"
    - test/*.dart
    - integration_test/**
    - pubspec.yaml

  errors:
    always_declare_return_types: error
    always_use_package_imports: error
    avoid_dynamic_calls: error
    avoid_empty_else: error
    avoid_print: error
    avoid_relative_lib_imports: error
    avoid_returning_null_for_future: error
    avoid_slow_async_io: error
    avoid_type_to_string: error
    avoid_types_as_parameter_names: error
    avoid_web_libraries_in_flutter: error

    camel_case_types: error
    cancel_subscriptions: error
    close_sinks: error
    comment_references: error
    control_flow_in_finally: error

    dead_code: error
    diagnostic_describe_all_properties: error

    empty_statements: error

    hash_and_equals: error

    import_internal_library: warning
    invalid_annotation_target: ignore
    iterable_contains_unrelated_type: error

    list_remove_unrelated_type: error
    literal_only_boolean_expressions: error

    missing_return: error
    missing_required_param: error

    native_function_body_in_non_sdk_code: warning
    no_adjacent_strings_in_list: error
    no_duplicate_case_values: error
    no_logic_in_create_state: error

    prefer_void_to_null: error
    #prefer_single_quotes: error

    test_types_in_equals: error
    throw_in_finally: error
    todo: ignore

    unnecessary_null_comparison: error
    unnecessary_statements: error
    unrelated_type_equality_checks: error
    unsafe_html: error
    use_key_in_widget_constructors: error

    valid_regexps: error

dart_code_metrics:
  anti-patterns:
    - long-method
    - long-parameter-list
  metrics:
    cyclomatic-complexity: 20
    maintainability-index: 50
    maximum-nesting: 5
    number-of-parameters: 5
    source-lines-of-code: 50
    technical-debt:
      threshold: 16
      todo-cost: 4
      ignore-cost: 8
      ignore-for-file-cost: 16
      as-dynamic-cost: 16
      deprecated-annotations-cost: 2
      file-nullsafety-migration-cost: 2
      unit-type: "hours"
  metrics-exclude:
    - test/src/analyzer_plugin/**
    - test/src/analyzers/**
    - test/src/cli/**
    - test/src/config_builder/**
    - test/src/helpers/**
    - test/src/reporters/**
    - test/src/utils/**
    - test/resources/*
    - test/*
  rules:
    - avoid-collection-methods-with-unrelated-types
    - avoid-dynamic:
        exclude:
          - test/**
    - avoid-global-state
    - avoid-late-keyword:
        exclude:
          - test/**
    - avoid-missing-enum-constant-in-map
    - avoid-unnecessary-type-assertions
    - avoid-unnecessary-type-casts
    - avoid-unused-parameters
    - binary-expression-operand-order
    - double-literal-format
    - newline-before-return
    - no-boolean-literal-compare
    - no-empty-block
    - no-equal-then-else
    - no-object-declaration
    - prefer-async-await
    - prefer-conditional-expressions
    - prefer-correct-identifier-length:
        exceptions:
          - id
          - ok
    - prefer-correct-type-name:
        max-length: 44
    - prefer-first
    - prefer-last
    - prefer-match-file-name:
        exclude:
          - test/**
    - prefer-moving-to-variable:
        exclude:
          - test/**
    - prefer-trailing-comma

    - member-ordering-extended:
        alphabetize: false # TODO set true after code-dart_code_metrics update
        order:
          - public-static-const-fields
          - private-static-const-fields
          - public-static-final-fields
          - private-static-final-fields
          - public-static-fields
          - private-static-fields
          - public-final-fields
          - private-final-fields
          - public-fields
          - public-getters-setters
          - private-fields
          - private-getters-setters
          - constructors
          - named-constructors
          - factory-constructors
          - overridden-methods
          - public-static-methods
          - public-methods
          - protected-methods
          - private-static-methods
          - private-methods

linter:
  rules:
    - always_declare_return_types
    - always_require_non_null_named_parameters
    - always_put_control_body_on_new_line
    - annotate_overrides
    - avoid_classes_with_only_static_members
    - avoid_double_and_int_checks
    - avoid_escaping_inner_quotes
    - avoid_field_initializers_in_const_classes
    - avoid_redundant_argument_values
    - avoid_returning_null_for_future
    - avoid_setters_without_getters
    - avoid_slow_async_io
    - avoid_type_to_string
    - avoid_unused_constructor_parameters
    - avoid_void_async
    - avoid_annotating_with_dynamic
    - avoid_bool_literals_in_conditional_expressions
    - avoid_empty_else
    - avoid_function_literals_in_foreach_calls
    - avoid_init_to_null
    - avoid_null_checks_in_equality_operators
    - avoid_renaming_method_parameters
    - avoid_return_types_on_setters
    - avoid_returning_null_for_void
    - avoid_single_cascade_in_expression_statements
    - avoid_print
    - avoid_relative_lib_imports
    - avoid_shadowing_type_parameters
    - avoid_types_as_parameter_names
    - avoid_unnecessary_containers
    - avoid_web_libraries_in_flutter
    - await_only_futures

    - camel_case_types
    - camel_case_extensions
    - cancel_subscriptions
    - cast_nullable_to_non_nullable
    - close_sinks
    - constant_identifier_names
    - control_flow_in_finally
    - curly_braces_in_flow_control_structures

    - depend_on_referenced_packages
    - deprecated_consistency
    - directives_ordering

    - empty_catches
    - empty_statements
    - empty_constructor_bodies
    - eol_at_end_of_file
    - exhaustive_cases

    - file_names
    # - flutter_style_todos

    - hash_and_equals

    - implementation_imports
    - iterable_contains_unrelated_type

    - leading_newlines_in_multiline_strings
    - library_names
    - library_prefixes
    - list_remove_unrelated_type

    - missing_whitespace_between_adjacent_strings

    - no_adjacent_strings_in_list
    - no_default_cases
    - no_leading_underscores_for_library_prefixes
    - no_leading_underscores_for_local_identifiers
    - non_constant_identifier_names
    - noop_primitive_operations
    - no_duplicate_case_values
    - no_logic_in_create_state
    - null_closures
    - null_check_on_nullable_type_parameter

    - omit_local_variable_types
    - only_throw_errors
    - overridden_fields

    - package_api_docs
    - package_names
    - package_prefixed_library_names
    - prefer_adjacent_string_concatenation
    - prefer_collection_literals
    - prefer_conditional_assignment
    - prefer_contains
    - prefer_equal_for_default_values
    - prefer_for_elements_to_map_fromIterable
    - prefer_function_declarations_over_variables
    - prefer_initializing_formals
    - prefer_inlined_adds
    - prefer_interpolation_to_compose_strings
    - prefer_is_not_operator
    - prefer_spread_collections
    - prefer_generic_function_type_aliases
    - prefer_is_empty
    - prefer_is_not_empty
    - prefer_iterable_whereType
    - prefer_typing_uninitialized_variables
    - prefer_const_constructors
    - prefer_const_constructors_in_immutables
    - prefer_const_declarations
    - prefer_const_literals_to_create_immutables
    - prefer_final_fields
    - prefer_final_in_for_each
    - prefer_final_locals
    - prefer_if_null_operators
    - prefer_null_aware_operators
    #- prefer_single_quotes
    - prefer_void_to_null
    - prefer_asserts_in_initializer_lists
    - prefer_foreach
    - prefer_if_elements_to_conditional_expressions
    - provide_deprecation_message

    - recursive_getters

    - secure_pubspec_urls
    - sized_box_for_whitespace
    - slash_for_doc_comments
    - sort_child_properties_last
    # - sort_constructors_first
    - sort_unnamed_constructors_first

    - test_types_in_equals
    - throw_in_finally
    - tighten_type_of_initializing_formals
    - type_init_formals

    - unnecessary_null_checks
    - unnecessary_parenthesis
    - unnecessary_await_in_return
    - unnecessary_const
    - unnecessary_new
    - unnecessary_statements
    - unnecessary_this
    - unrelated_type_equality_checks
    - unnecessary_brace_in_string_interps
    - unnecessary_constructor_name
    - unnecessary_getters_setters
    - unnecessary_late
    - unnecessary_overrides
    - unnecessary_null_aware_assignments
    - unnecessary_null_in_if_null_operators
    - unnecessary_nullable_for_final_variable_declarations
    - unnecessary_string_escapes
    - unnecessary_string_interpolations
    - unsafe_html
    - use_key_in_widget_constructors
    - use_build_context_synchronously
    - use_full_hex_values_for_flutter_colors
    - use_function_type_syntax_for_parameters
    - use_rethrow_when_possible
    - use_if_null_to_convert_nulls_to_bools
    - use_is_even_rather_than_modulo
    - use_late_for_private_fields_and_variables
    - use_named_constants
    - use_raw_strings
    - use_setters_to_change_properties
    - use_test_throws_matchers

    - valid_regexps
    - void_checks

    # - always_use_package_imports
    # - avoid_dynamic_calls
    - comment_references
    - invariant_booleans
    - literal_only_boolean_expressions
    # - always_put_required_named_parameters_first
    - avoid_catches_without_on_clauses
    - avoid_catching_errors
    - avoid_equals_and_hash_code_on_mutable_classes
    - avoid_implementing_value_types
    - avoid_js_rounded_ints
    - avoid_multiple_declarations_per_line
    - avoid_positional_boolean_parameters
    - avoid_private_typedef_functions
    - avoid_returning_null
    - avoid_returning_this
    - avoid_types_on_closure_parameters
    - cascade_invocations
    - do_not_use_environment
    - no_runtimeType_toString
    - one_member_abstracts
    - parameter_assignments
    - prefer_constructors_over_static_methods
    # - prefer_mixin
    - type_annotate_public_apis
    - unawaited_futures
    - unnecessary_lambdas
    - unnecessary_raw_strings
    - use_string_buffers
    - use_to_and_as_if_applicable
    - flutter_style_todos
    - conditional_uri_does_not_exist
    - sized_box_shrink_expand
    - use_decorated_box
    - sort_pub_dependencies
